// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nexos_test.Contexts;

namespace nexos_test.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("nexos_test.Models.CitasModel", b =>
                {
                    b.Property<int>("CitaDoctorID")
                        .HasColumnType("int");

                    b.Property<string>("CitaPacienteID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CitaDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CitaID")
                        .HasColumnType("int");

                    b.Property<string>("CitaTOTAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoctoresModelDoctorID")
                        .HasColumnType("int");

                    b.Property<int?>("PacientesModelPacienteID")
                        .HasColumnType("int");

                    b.HasKey("CitaDoctorID", "CitaPacienteID");

                    b.HasIndex("DoctoresModelDoctorID");

                    b.HasIndex("PacientesModelPacienteID");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("nexos_test.Models.DoctoresModel", b =>
                {
                    b.Property<int>("DoctorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DoctorApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorEspecialidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorHopital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoctorNumCred")
                        .HasColumnType("int");

                    b.HasKey("DoctorID");

                    b.ToTable("Doctores");
                });

            modelBuilder.Entity("nexos_test.Models.PacientesModel", b =>
                {
                    b.Property<int?>("PacienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PacienteApellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PacienteCodPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PacienteEdad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PacienteEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PacienteNombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteSegSocial")
                        .HasColumnType("int");

                    b.Property<string>("PacienteTel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PacienteID");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("nexos_test.Models.CitasModel", b =>
                {
                    b.HasOne("nexos_test.Models.DoctoresModel", null)
                        .WithMany("DoctorCita")
                        .HasForeignKey("DoctoresModelDoctorID");

                    b.HasOne("nexos_test.Models.PacientesModel", null)
                        .WithMany("PacienteCita")
                        .HasForeignKey("PacientesModelPacienteID");
                });
#pragma warning restore 612, 618
        }
    }
}
